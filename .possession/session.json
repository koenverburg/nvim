{"name":"session","cwd":"\/Users\/verbukoe\/code\/github\/nvim","user_data":[],"plugins":{"neotest":[],"dapui":[],"dap":[],"tabby":[],"symbols_outline":[],"neo_tree":[],"nvim_tree":{"tabs":[]},"close_windows":[],"delete_hidden_buffers":[]},"vimscript":"let SessionLoad = 1\nlet s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1\nlet v:this_session=expand(\"<sfile>:p\")\nsilent only\nsilent tabonly\ncd ~\/code\/github\/nvim\nif expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''\n  let s:wipebuf = bufnr('%')\nendif\nlet s:shortmess_save = &shortmess\nif &shortmess =~ 'A'\n  set shortmess=aoOA\nelse\n  set shortmess=aoO\nendif\nbadd +1 lua\/plugins\/lualine.lua\nbadd +1 ~\/code\/github\/nvim\/lua\/plugins\/harpeek.lua\nbadd +117 lua\/core\/config.lua\nbadd +47 ~\/code\/github\/nvim\/lua\/plugins\/auto-theme.lua\nbadd +11 lua\/plugins\/no-clown-fiesta.lua\nargglobal\n%argdel\nset stal=2\ntabnew +setlocal\\ bufhidden=wipe\ntabrewind\nedit ~\/code\/github\/nvim\/lua\/plugins\/harpeek.lua\nlet s:save_splitbelow = &splitbelow\nlet s:save_splitright = &splitright\nset splitbelow splitright\nwincmd _ | wincmd |\nvsplit\n1wincmd h\nwincmd _ | wincmd |\nsplit\n1wincmd k\nwincmd w\nwincmd w\nwincmd _ | wincmd |\nsplit\n1wincmd k\nwincmd w\nlet &splitbelow = s:save_splitbelow\nlet &splitright = s:save_splitright\nwincmd t\nlet s:save_winminheight = &winminheight\nlet s:save_winminwidth = &winminwidth\nset winminheight=0\nset winheight=1\nset winminwidth=0\nset winwidth=1\nexe '1resize ' . ((&lines * 33 + 34) \/ 68)\nexe 'vert 1resize ' . ((&columns * 128 + 128) \/ 256)\nexe '2resize ' . ((&lines * 32 + 34) \/ 68)\nexe 'vert 2resize ' . ((&columns * 128 + 128) \/ 256)\nexe '3resize ' . ((&lines * 33 + 34) \/ 68)\nexe 'vert 3resize ' . ((&columns * 127 + 128) \/ 256)\nexe '4resize ' . ((&lines * 32 + 34) \/ 68)\nexe 'vert 4resize ' . ((&columns * 127 + 128) \/ 256)\nargglobal\nlet s:cpo_save=&cpo\nset cpo&vim\nnnoremap <buffer> <silent> \u0016\u001d <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> ,sd <Cmd>lua vim.diagnostic.open_float()\u0016\r\nnnoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nnnoremap <buffer> <silent> K <Cmd>lua vim.lsp.buf.hover()\u0016\r\nnnoremap <buffer> <silent> gD <Cmd>lua vim.lsp.buf.declaration()\u0016\r\nnnoremap <buffer> <silent> gd <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> gi <Cmd>lua vim.lsp.buf.implementation()\u0016\r\nnnoremap <buffer> <silent> goc <Cmd>lua vim.lsp.buf.outgoing_calls()\u0016\r\nnnoremap <buffer> <silent> <C-]> <Cmd>lua vim.lsp.buf.definition()\u0016\r\ninoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nlet &cpo=s:cpo_save\nunlet s:cpo_save\nsetlocal keymap=\nsetlocal noarabic\nsetlocal autoindent\nsetlocal backupcopy=\nsetlocal nobinary\nsetlocal nobreakindent\nsetlocal breakindentopt=\nsetlocal bufhidden=\nsetlocal buflisted\nsetlocal buftype=\nsetlocal nocindent\nsetlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e\nsetlocal cinoptions=\nsetlocal cinscopedecls=public,protected,private\nsetlocal cinwords=if,else,while,do,for,switch\nsetlocal colorcolumn=\nsetlocal comments=:---,:--\nsetlocal commentstring=--\\ %s\nsetlocal complete=.,w,b,u,t\nsetlocal completefunc=\nsetlocal concealcursor=\nsetlocal conceallevel=0\nsetlocal nocopyindent\nsetlocal nocursorbind\nsetlocal nocursorcolumn\nsetlocal cursorline\nsetlocal cursorlineopt=both\nsetlocal define=\\\\<function\\\\\u0016|\\\\<local\\\\%(\\\\s\\\\+function\\\\)\\\\=\nsetlocal dictionary=\nsetlocal nodiff\nsetlocal equalprg=\nsetlocal errorformat=\nsetlocal expandtab\nif &filetype != 'lua'\nsetlocal filetype=lua\nendif\nsetlocal fillchars=\nsetlocal fixendofline\nsetlocal foldcolumn=0\nsetlocal foldenable\nsetlocal foldexpr=0\nsetlocal foldignore=#\nsetlocal foldlevel=0\nsetlocal foldmarker={{{,}}}\nsetlocal foldmethod=manual\nsetlocal foldminlines=1\nsetlocal foldnestmax=20\nsetlocal foldtext=v:lua.require('pretty-fold').foldtext.global()\nsetlocal formatexpr=v:lua.require'conform'.formatexpr()\nsetlocal formatlistpat=^\\\\s*\\\\d\\\\+[\\\\]:.)}\\\\t\\ ]\\\\s*\nsetlocal formatoptions=jcroql\nsetlocal formatprg=\nsetlocal grepprg=\nsetlocal iminsert=0\nsetlocal imsearch=-1\nsetlocal include=\nsetlocal includeexpr=tr(v:fname,'.','\/')\nsetlocal indentexpr=nvim_treesitter#indent()\nsetlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e,0=end,0=until\nsetlocal noinfercase\nsetlocal iskeyword=@,48-57,_,192-255\nsetlocal keywordprg=\nsetlocal nolinebreak\nsetlocal nolisp\nsetlocal lispoptions=\nsetlocal lispwords=\nsetlocal nolist\nsetlocal listchars=\nsetlocal makeencoding=\nsetlocal makeprg=\nsetlocal matchpairs=(:),{:},[:]\nsetlocal modeline\nsetlocal modifiable\nsetlocal nrformats=bin,hex\nsetlocal number\nsetlocal numberwidth=4\nsetlocal omnifunc=v:lua.vim.lsp.omnifunc\nsetlocal path=\nsetlocal nopreserveindent\nsetlocal nopreviewwindow\nsetlocal quoteescape=\\\\\nsetlocal noreadonly\nsetlocal norelativenumber\nsetlocal norightleft\nsetlocal rightleftcmd=search\nsetlocal scrollback=-1\nsetlocal noscrollbind\nsetlocal scrolloff=-1\nsetlocal shiftwidth=2\nsetlocal showbreak=\nsetlocal sidescrolloff=-1\nsetlocal signcolumn=number\nsetlocal nosmartindent\nsetlocal nosmoothscroll\nsetlocal softtabstop=2\nsetlocal nospell\nsetlocal spellcapcheck=[.?!]\\\\_[\\\\])'\\\"\\\\t\\ ]\\\\+\nsetlocal spellfile=\nsetlocal spelllang=en\nsetlocal spelloptions=noplainbuffer\nsetlocal statuscolumn=\nsetlocal statusline=%#lualine_a_command#\\ COMMAND\\ %#lualine_b_command#\\ \\ main\\ %#lualine_b_filetype_DevIconLua_command#\\ %#lualine_b_command#%#lualine_b_command#%#lualine_b_command#\\ auto-theme.lua\\ %<%#lualine_c_command#%=%#Normal#\\ ●\\ stylua\\ %#lualine_a_command#%#lualine_a_command#\\ ●\\ lua_ls\\ \nsetlocal suffixesadd=.lua\nsetlocal swapfile\nsetlocal synmaxcol=3000\nif &syntax != 'ON'\nsetlocal syntax=ON\nendif\nsetlocal tabstop=2\nsetlocal tagcase=\nsetlocal tagfunc=v:lua.vim.lsp.tagfunc\nsetlocal tags=\nsetlocal textwidth=0\nsetlocal thesaurus=\nsetlocal thesaurusfunc=\nsetlocal undofile\nsetlocal undolevels=-123456\nsetlocal varsofttabstop=\nsetlocal vartabstop=\nsetlocal virtualedit=\nsetlocal winbar=\\ %#DevIconLua#%#Normal#\\ %t%m\\ %#Normal#\\ \\ \\ \\ %#Normal#%=%l\/%L\nsetlocal winblend=0\nsetlocal nowinfixheight\nsetlocal nowinfixwidth\nsetlocal winhighlight=\nsetlocal wrap\nsetlocal wrapmargin=0\nsilent! normal! zE\nlet &fdl = &fdl\nlet s:l = 7 - ((6 * winheight(0) + 16) \/ 32)\nif s:l < 1 | let s:l = 1 | endif\nkeepjumps exe s:l\nnormal! zt\nkeepjumps 7\nnormal! 0\nwincmd w\nargglobal\nif bufexists(fnamemodify(\"lua\/core\/config.lua\", \":p\")) | buffer lua\/core\/config.lua | else | edit lua\/core\/config.lua | endif\nif &buftype ==# 'terminal'\n  silent file lua\/core\/config.lua\nendif\nbalt ~\/code\/github\/nvim\/lua\/plugins\/harpeek.lua\nlet s:cpo_save=&cpo\nset cpo&vim\nnnoremap <buffer> <silent> \u0016\u001d <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> ,sd <Cmd>lua vim.diagnostic.open_float()\u0016\r\nnnoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nnnoremap <buffer> <silent> K <Cmd>lua vim.lsp.buf.hover()\u0016\r\nnnoremap <buffer> <silent> gD <Cmd>lua vim.lsp.buf.declaration()\u0016\r\nnnoremap <buffer> <silent> gd <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> gi <Cmd>lua vim.lsp.buf.implementation()\u0016\r\nnnoremap <buffer> <silent> goc <Cmd>lua vim.lsp.buf.outgoing_calls()\u0016\r\nnnoremap <buffer> <silent> <C-]> <Cmd>lua vim.lsp.buf.definition()\u0016\r\ninoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nlet &cpo=s:cpo_save\nunlet s:cpo_save\nsetlocal keymap=\nsetlocal noarabic\nsetlocal autoindent\nsetlocal backupcopy=\nsetlocal nobinary\nsetlocal nobreakindent\nsetlocal breakindentopt=\nsetlocal bufhidden=\nsetlocal buflisted\nsetlocal buftype=\nsetlocal nocindent\nsetlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e\nsetlocal cinoptions=\nsetlocal cinscopedecls=public,protected,private\nsetlocal cinwords=if,else,while,do,for,switch\nsetlocal colorcolumn=\nsetlocal comments=:---,:--\nsetlocal commentstring=--\\ %s\nsetlocal complete=.,w,b,u,t\nsetlocal completefunc=\nsetlocal concealcursor=\nsetlocal conceallevel=0\nsetlocal nocopyindent\nsetlocal nocursorbind\nsetlocal nocursorcolumn\nsetlocal cursorline\nsetlocal cursorlineopt=both\nsetlocal define=\\\\<function\\\\\u0016|\\\\<local\\\\%(\\\\s\\\\+function\\\\)\\\\=\nsetlocal dictionary=\nsetlocal nodiff\nsetlocal equalprg=\nsetlocal errorformat=\nsetlocal expandtab\nif &filetype != 'lua'\nsetlocal filetype=lua\nendif\nsetlocal fillchars=\nsetlocal fixendofline\nsetlocal foldcolumn=0\nsetlocal foldenable\nsetlocal foldexpr=0\nsetlocal foldignore=#\nsetlocal foldlevel=0\nsetlocal foldmarker={{{,}}}\nsetlocal foldmethod=manual\nsetlocal foldminlines=1\nsetlocal foldnestmax=20\nsetlocal foldtext=v:lua.require('pretty-fold').foldtext.global()\nsetlocal formatexpr=v:lua.require'conform'.formatexpr()\nsetlocal formatlistpat=^\\\\s*\\\\d\\\\+[\\\\]:.)}\\\\t\\ ]\\\\s*\nsetlocal formatoptions=jcroql\nsetlocal formatprg=\nsetlocal grepprg=\nsetlocal iminsert=0\nsetlocal imsearch=-1\nsetlocal include=\nsetlocal includeexpr=tr(v:fname,'.','\/')\nsetlocal indentexpr=nvim_treesitter#indent()\nsetlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e,0=end,0=until\nsetlocal noinfercase\nsetlocal iskeyword=@,48-57,_,192-255\nsetlocal keywordprg=\nsetlocal nolinebreak\nsetlocal nolisp\nsetlocal lispoptions=\nsetlocal lispwords=\nsetlocal nolist\nsetlocal listchars=\nsetlocal makeencoding=\nsetlocal makeprg=\nsetlocal matchpairs=(:),{:},[:]\nsetlocal modeline\nsetlocal modifiable\nsetlocal nrformats=bin,hex\nsetlocal number\nsetlocal numberwidth=4\nsetlocal omnifunc=v:lua.vim.lsp.omnifunc\nsetlocal path=\nsetlocal nopreserveindent\nsetlocal nopreviewwindow\nsetlocal quoteescape=\\\\\nsetlocal noreadonly\nsetlocal norelativenumber\nsetlocal norightleft\nsetlocal rightleftcmd=search\nsetlocal scrollback=-1\nsetlocal noscrollbind\nsetlocal scrolloff=-1\nsetlocal shiftwidth=2\nsetlocal showbreak=\nsetlocal sidescrolloff=-1\nsetlocal signcolumn=number\nsetlocal nosmartindent\nsetlocal nosmoothscroll\nsetlocal softtabstop=2\nsetlocal nospell\nsetlocal spellcapcheck=[.?!]\\\\_[\\\\])'\\\"\\\\t\\ ]\\\\+\nsetlocal spellfile=\nsetlocal spelllang=en\nsetlocal spelloptions=noplainbuffer\nsetlocal statuscolumn=\nsetlocal statusline=%#lualine_a_command#\\ COMMAND\\ %#lualine_b_command#\\ \\ main\\ %#lualine_b_filetype_DevIconLua_command#\\ %#lualine_b_command#%#lualine_b_command#%#lualine_b_command#\\ auto-theme.lua\\ %<%#lualine_c_command#%=%#Normal#\\ ●\\ stylua\\ %#lualine_a_command#%#lualine_a_command#\\ ●\\ lua_ls\\ \nsetlocal suffixesadd=.lua\nsetlocal swapfile\nsetlocal synmaxcol=3000\nif &syntax != 'ON'\nsetlocal syntax=ON\nendif\nsetlocal tabstop=2\nsetlocal tagcase=\nsetlocal tagfunc=v:lua.vim.lsp.tagfunc\nsetlocal tags=\nsetlocal textwidth=0\nsetlocal thesaurus=\nsetlocal thesaurusfunc=\nsetlocal undofile\nsetlocal undolevels=-123456\nsetlocal varsofttabstop=\nsetlocal vartabstop=\nsetlocal virtualedit=\nsetlocal winbar=\\ %#DevIconLua#%#Normal#\\ %t%m\\ %#GitSignsAdd#2%#Normal#\\ %#GitSignsChange#~1%#Normal#\\ %#Normal#\\ \\ \\ \\ %#Normal#%=%l\/%L\nsetlocal winblend=0\nsetlocal nowinfixheight\nsetlocal nowinfixwidth\nsetlocal winhighlight=\nsetlocal wrap\nsetlocal wrapmargin=0\nsilent! normal! zE\nlet &fdl = &fdl\nlet s:l = 124 - ((15 * winheight(0) + 15) \/ 31)\nif s:l < 1 | let s:l = 1 | endif\nkeepjumps exe s:l\nnormal! zt\nkeepjumps 124\nnormal! 039|\nwincmd w\nargglobal\nif bufexists(fnamemodify(\"lua\/plugins\/no-clown-fiesta.lua\", \":p\")) | buffer lua\/plugins\/no-clown-fiesta.lua | else | edit lua\/plugins\/no-clown-fiesta.lua | endif\nif &buftype ==# 'terminal'\n  silent file lua\/plugins\/no-clown-fiesta.lua\nendif\nbalt ~\/code\/github\/nvim\/lua\/plugins\/harpeek.lua\nlet s:cpo_save=&cpo\nset cpo&vim\nnnoremap <buffer> <silent> \u0016\u001d <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> ,sd <Cmd>lua vim.diagnostic.open_float()\u0016\r\nnnoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nnnoremap <buffer> <silent> K <Cmd>lua vim.lsp.buf.hover()\u0016\r\nnnoremap <buffer> <silent> gD <Cmd>lua vim.lsp.buf.declaration()\u0016\r\nnnoremap <buffer> <silent> gd <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> gi <Cmd>lua vim.lsp.buf.implementation()\u0016\r\nnnoremap <buffer> <silent> goc <Cmd>lua vim.lsp.buf.outgoing_calls()\u0016\r\nnnoremap <buffer> <silent> <C-]> <Cmd>lua vim.lsp.buf.definition()\u0016\r\ninoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nlet &cpo=s:cpo_save\nunlet s:cpo_save\nsetlocal keymap=\nsetlocal noarabic\nsetlocal autoindent\nsetlocal backupcopy=\nsetlocal nobinary\nsetlocal nobreakindent\nsetlocal breakindentopt=\nsetlocal bufhidden=\nsetlocal buflisted\nsetlocal buftype=\nsetlocal nocindent\nsetlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e\nsetlocal cinoptions=\nsetlocal cinscopedecls=public,protected,private\nsetlocal cinwords=if,else,while,do,for,switch\nsetlocal colorcolumn=\nsetlocal comments=:---,:--\nsetlocal commentstring=--\\ %s\nsetlocal complete=.,w,b,u,t\nsetlocal completefunc=\nsetlocal concealcursor=\nsetlocal conceallevel=0\nsetlocal nocopyindent\nsetlocal nocursorbind\nsetlocal nocursorcolumn\nsetlocal cursorline\nsetlocal cursorlineopt=both\nsetlocal define=\\\\<function\\\\\u0016|\\\\<local\\\\%(\\\\s\\\\+function\\\\)\\\\=\nsetlocal dictionary=\nsetlocal nodiff\nsetlocal equalprg=\nsetlocal errorformat=\nsetlocal expandtab\nif &filetype != 'lua'\nsetlocal filetype=lua\nendif\nsetlocal fillchars=\nsetlocal fixendofline\nsetlocal foldcolumn=0\nsetlocal foldenable\nsetlocal foldexpr=0\nsetlocal foldignore=#\nsetlocal foldlevel=0\nsetlocal foldmarker={{{,}}}\nsetlocal foldmethod=manual\nsetlocal foldminlines=1\nsetlocal foldnestmax=20\nsetlocal foldtext=v:lua.require('pretty-fold').foldtext.global()\nsetlocal formatexpr=v:lua.require'conform'.formatexpr()\nsetlocal formatlistpat=^\\\\s*\\\\d\\\\+[\\\\]:.)}\\\\t\\ ]\\\\s*\nsetlocal formatoptions=jcroql\nsetlocal formatprg=\nsetlocal grepprg=\nsetlocal iminsert=0\nsetlocal imsearch=-1\nsetlocal include=\nsetlocal includeexpr=tr(v:fname,'.','\/')\nsetlocal indentexpr=nvim_treesitter#indent()\nsetlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e,0=end,0=until\nsetlocal noinfercase\nsetlocal iskeyword=@,48-57,_,192-255\nsetlocal keywordprg=\nsetlocal nolinebreak\nsetlocal nolisp\nsetlocal lispoptions=\nsetlocal lispwords=\nsetlocal nolist\nsetlocal listchars=\nsetlocal makeencoding=\nsetlocal makeprg=\nsetlocal matchpairs=(:),{:},[:]\nsetlocal modeline\nsetlocal modifiable\nsetlocal nrformats=bin,hex\nsetlocal number\nsetlocal numberwidth=4\nsetlocal omnifunc=v:lua.vim.lsp.omnifunc\nsetlocal path=\nsetlocal nopreserveindent\nsetlocal nopreviewwindow\nsetlocal quoteescape=\\\\\nsetlocal noreadonly\nsetlocal norelativenumber\nsetlocal norightleft\nsetlocal rightleftcmd=search\nsetlocal scrollback=-1\nsetlocal noscrollbind\nsetlocal scrolloff=-1\nsetlocal shiftwidth=2\nsetlocal showbreak=\nsetlocal sidescrolloff=-1\nsetlocal signcolumn=number\nsetlocal nosmartindent\nsetlocal nosmoothscroll\nsetlocal softtabstop=2\nsetlocal nospell\nsetlocal spellcapcheck=[.?!]\\\\_[\\\\])'\\\"\\\\t\\ ]\\\\+\nsetlocal spellfile=\nsetlocal spelllang=en\nsetlocal spelloptions=noplainbuffer\nsetlocal statuscolumn=\nsetlocal statusline=%#lualine_a_command#\\ COMMAND\\ %#lualine_b_command#\\ \\ main\\ %#lualine_b_filetype_DevIconLua_command#\\ %#lualine_b_command#%#lualine_b_command#%#lualine_b_command#\\ auto-theme.lua\\ %<%#lualine_c_command#%=%#Normal#\\ ●\\ stylua\\ %#lualine_a_command#%#lualine_a_command#\\ ●\\ lua_ls\\ \nsetlocal suffixesadd=.lua\nsetlocal swapfile\nsetlocal synmaxcol=3000\nif &syntax != 'ON'\nsetlocal syntax=ON\nendif\nsetlocal tabstop=2\nsetlocal tagcase=\nsetlocal tagfunc=v:lua.vim.lsp.tagfunc\nsetlocal tags=\nsetlocal textwidth=0\nsetlocal thesaurus=\nsetlocal thesaurusfunc=\nsetlocal undofile\nsetlocal undolevels=-123456\nsetlocal varsofttabstop=\nsetlocal vartabstop=\nsetlocal virtualedit=\nsetlocal winbar=\\ %#DevIconLua#%#Normal#\\ %t%m\\ %#Normal#\\ \\ \\ \\ %#Normal#%=%l\/%L\nsetlocal winblend=0\nsetlocal nowinfixheight\nsetlocal nowinfixwidth\nsetlocal winhighlight=\nsetlocal wrap\nsetlocal wrapmargin=0\nsilent! normal! zE\nlet &fdl = &fdl\nlet s:l = 3 - ((2 * winheight(0) + 16) \/ 32)\nif s:l < 1 | let s:l = 1 | endif\nkeepjumps exe s:l\nnormal! zt\nkeepjumps 3\nnormal! 017|\nwincmd w\nargglobal\nif bufexists(fnamemodify(\"~\/code\/github\/nvim\/lua\/plugins\/auto-theme.lua\", \":p\")) | buffer ~\/code\/github\/nvim\/lua\/plugins\/auto-theme.lua | else | edit ~\/code\/github\/nvim\/lua\/plugins\/auto-theme.lua | endif\nif &buftype ==# 'terminal'\n  silent file ~\/code\/github\/nvim\/lua\/plugins\/auto-theme.lua\nendif\nbalt ~\/code\/github\/nvim\/lua\/plugins\/harpeek.lua\nlet s:cpo_save=&cpo\nset cpo&vim\nnnoremap <buffer> <silent> \u0016\u001d <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> ,sd <Cmd>lua vim.diagnostic.open_float()\u0016\r\nnnoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nnnoremap <buffer> <silent> K <Cmd>lua vim.lsp.buf.hover()\u0016\r\nnnoremap <buffer> <silent> gD <Cmd>lua vim.lsp.buf.declaration()\u0016\r\nnnoremap <buffer> <silent> gd <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> gi <Cmd>lua vim.lsp.buf.implementation()\u0016\r\nnnoremap <buffer> <silent> goc <Cmd>lua vim.lsp.buf.outgoing_calls()\u0016\r\nnnoremap <buffer> <silent> <C-]> <Cmd>lua vim.lsp.buf.definition()\u0016\r\ninoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nlet &cpo=s:cpo_save\nunlet s:cpo_save\nsetlocal keymap=\nsetlocal noarabic\nsetlocal autoindent\nsetlocal backupcopy=\nsetlocal nobinary\nsetlocal nobreakindent\nsetlocal breakindentopt=\nsetlocal bufhidden=\nsetlocal buflisted\nsetlocal buftype=\nsetlocal nocindent\nsetlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e\nsetlocal cinoptions=\nsetlocal cinscopedecls=public,protected,private\nsetlocal cinwords=if,else,while,do,for,switch\nsetlocal colorcolumn=\nsetlocal comments=:---,:--\nsetlocal commentstring=--\\ %s\nsetlocal complete=.,w,b,u,t\nsetlocal completefunc=\nsetlocal concealcursor=\nsetlocal conceallevel=0\nsetlocal nocopyindent\nsetlocal nocursorbind\nsetlocal nocursorcolumn\nsetlocal cursorline\nsetlocal cursorlineopt=both\nsetlocal define=\\\\<function\\\\\u0016|\\\\<local\\\\%(\\\\s\\\\+function\\\\)\\\\=\nsetlocal dictionary=\nsetlocal nodiff\nsetlocal equalprg=\nsetlocal errorformat=\nsetlocal expandtab\nif &filetype != 'lua'\nsetlocal filetype=lua\nendif\nsetlocal fillchars=\nsetlocal fixendofline\nsetlocal foldcolumn=0\nsetlocal foldenable\nsetlocal foldexpr=0\nsetlocal foldignore=#\nsetlocal foldlevel=0\nsetlocal foldmarker={{{,}}}\nsetlocal foldmethod=manual\nsetlocal foldminlines=1\nsetlocal foldnestmax=20\nsetlocal foldtext=v:lua.require('pretty-fold').foldtext.global()\nsetlocal formatexpr=v:lua.require'conform'.formatexpr()\nsetlocal formatlistpat=^\\\\s*\\\\d\\\\+[\\\\]:.)}\\\\t\\ ]\\\\s*\nsetlocal formatoptions=jcroql\nsetlocal formatprg=\nsetlocal grepprg=\nsetlocal iminsert=0\nsetlocal imsearch=-1\nsetlocal include=\nsetlocal includeexpr=tr(v:fname,'.','\/')\nsetlocal indentexpr=nvim_treesitter#indent()\nsetlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e,0=end,0=until\nsetlocal noinfercase\nsetlocal iskeyword=@,48-57,_,192-255\nsetlocal keywordprg=\nsetlocal nolinebreak\nsetlocal nolisp\nsetlocal lispoptions=\nsetlocal lispwords=\nsetlocal nolist\nsetlocal listchars=\nsetlocal makeencoding=\nsetlocal makeprg=\nsetlocal matchpairs=(:),{:},[:]\nsetlocal modeline\nsetlocal modifiable\nsetlocal nrformats=bin,hex\nsetlocal number\nsetlocal numberwidth=4\nsetlocal omnifunc=v:lua.vim.lsp.omnifunc\nsetlocal path=\nsetlocal nopreserveindent\nsetlocal nopreviewwindow\nsetlocal quoteescape=\\\\\nsetlocal noreadonly\nsetlocal norelativenumber\nsetlocal norightleft\nsetlocal rightleftcmd=search\nsetlocal scrollback=-1\nsetlocal noscrollbind\nsetlocal scrolloff=-1\nsetlocal shiftwidth=2\nsetlocal showbreak=\nsetlocal sidescrolloff=-1\nsetlocal signcolumn=number\nsetlocal nosmartindent\nsetlocal nosmoothscroll\nsetlocal softtabstop=2\nsetlocal nospell\nsetlocal spellcapcheck=[.?!]\\\\_[\\\\])'\\\"\\\\t\\ ]\\\\+\nsetlocal spellfile=\nsetlocal spelllang=en\nsetlocal spelloptions=noplainbuffer\nsetlocal statuscolumn=\nsetlocal statusline=%#lualine_a_command#\\ COMMAND\\ %#lualine_b_command#\\ \\ main\\ %#lualine_b_filetype_DevIconLua_command#\\ %#lualine_b_command#%#lualine_b_command#%#lualine_b_command#\\ auto-theme.lua\\ %<%#lualine_c_command#%=%#Normal#\\ ●\\ stylua\\ %#lualine_a_command#%#lualine_a_command#\\ ●\\ lua_ls\\ \nsetlocal suffixesadd=.lua\nsetlocal swapfile\nsetlocal synmaxcol=3000\nif &syntax != 'ON'\nsetlocal syntax=ON\nendif\nsetlocal tabstop=2\nsetlocal tagcase=\nsetlocal tagfunc=v:lua.vim.lsp.tagfunc\nsetlocal tags=\nsetlocal textwidth=0\nsetlocal thesaurus=\nsetlocal thesaurusfunc=\nsetlocal undofile\nsetlocal undolevels=-123456\nsetlocal varsofttabstop=\nsetlocal vartabstop=\nsetlocal virtualedit=\nsetlocal winbar=\\ %#DevIconLua#%#Normal#\\ %t%m\\ %#Normal#\\ \\ \\ \\ %#Normal#%=%l\/%L\nsetlocal winblend=0\nsetlocal nowinfixheight\nsetlocal nowinfixwidth\nsetlocal winhighlight=\nsetlocal wrap\nsetlocal wrapmargin=0\nsilent! normal! zE\nlet &fdl = &fdl\nlet s:l = 47 - ((15 * winheight(0) + 15) \/ 31)\nif s:l < 1 | let s:l = 1 | endif\nkeepjumps exe s:l\nnormal! zt\nkeepjumps 47\nnormal! 031|\nwincmd w\n4wincmd w\nexe '1resize ' . ((&lines * 33 + 34) \/ 68)\nexe 'vert 1resize ' . ((&columns * 128 + 128) \/ 256)\nexe '2resize ' . ((&lines * 32 + 34) \/ 68)\nexe 'vert 2resize ' . ((&columns * 128 + 128) \/ 256)\nexe '3resize ' . ((&lines * 33 + 34) \/ 68)\nexe 'vert 3resize ' . ((&columns * 127 + 128) \/ 256)\nexe '4resize ' . ((&lines * 32 + 34) \/ 68)\nexe 'vert 4resize ' . ((&columns * 127 + 128) \/ 256)\ntabnext\nedit lua\/plugins\/lualine.lua\nargglobal\nlet s:cpo_save=&cpo\nset cpo&vim\nnnoremap <buffer> <silent> \u0016\u001d <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> ,sd <Cmd>lua vim.diagnostic.open_float()\u0016\r\nnnoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nnnoremap <buffer> <silent> K <Cmd>lua vim.lsp.buf.hover()\u0016\r\nnnoremap <buffer> <silent> gD <Cmd>lua vim.lsp.buf.declaration()\u0016\r\nnnoremap <buffer> <silent> gd <Cmd>lua vim.lsp.buf.definition()\u0016\r\nnnoremap <buffer> <silent> gi <Cmd>lua vim.lsp.buf.implementation()\u0016\r\nnnoremap <buffer> <silent> goc <Cmd>lua vim.lsp.buf.outgoing_calls()\u0016\r\nnnoremap <buffer> <silent> <C-]> <Cmd>lua vim.lsp.buf.definition()\u0016\r\ninoremap <buffer> <silent> ,ca <Cmd>lua vim.lsp.buf.code_action()\u0016\r\nlet &cpo=s:cpo_save\nunlet s:cpo_save\nsetlocal keymap=\nsetlocal noarabic\nsetlocal autoindent\nsetlocal backupcopy=\nsetlocal nobinary\nsetlocal nobreakindent\nsetlocal breakindentopt=\nsetlocal bufhidden=\nsetlocal buflisted\nsetlocal buftype=\nsetlocal nocindent\nsetlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e\nsetlocal cinoptions=\nsetlocal cinscopedecls=public,protected,private\nsetlocal cinwords=if,else,while,do,for,switch\nsetlocal colorcolumn=\nsetlocal comments=:---,:--\nsetlocal commentstring=--\\ %s\nsetlocal complete=.,w,b,u,t\nsetlocal completefunc=\nsetlocal concealcursor=\nsetlocal conceallevel=0\nsetlocal nocopyindent\nsetlocal nocursorbind\nsetlocal nocursorcolumn\nsetlocal cursorline\nsetlocal cursorlineopt=both\nsetlocal define=\\\\<function\\\\\u0016|\\\\<local\\\\%(\\\\s\\\\+function\\\\)\\\\=\nsetlocal dictionary=\nsetlocal nodiff\nsetlocal equalprg=\nsetlocal errorformat=\nsetlocal expandtab\nif &filetype != 'lua'\nsetlocal filetype=lua\nendif\nsetlocal fillchars=\nsetlocal fixendofline\nsetlocal foldcolumn=0\nsetlocal foldenable\nsetlocal foldexpr=0\nsetlocal foldignore=#\nsetlocal foldlevel=0\nsetlocal foldmarker={{{,}}}\nsetlocal foldmethod=manual\nsetlocal foldminlines=1\nsetlocal foldnestmax=20\nsetlocal foldtext=v:lua.require('pretty-fold').foldtext.global()\nsetlocal formatexpr=v:lua.require'conform'.formatexpr()\nsetlocal formatlistpat=^\\\\s*\\\\d\\\\+[\\\\]:.)}\\\\t\\ ]\\\\s*\nsetlocal formatoptions=jcroql\nsetlocal formatprg=\nsetlocal grepprg=\nsetlocal iminsert=0\nsetlocal imsearch=-1\nsetlocal include=\nsetlocal includeexpr=tr(v:fname,'.','\/')\nsetlocal indentexpr=nvim_treesitter#indent()\nsetlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e,0=end,0=until\nsetlocal noinfercase\nsetlocal iskeyword=@,48-57,_,192-255\nsetlocal keywordprg=\nsetlocal nolinebreak\nsetlocal nolisp\nsetlocal lispoptions=\nsetlocal lispwords=\nsetlocal nolist\nsetlocal listchars=\nsetlocal makeencoding=\nsetlocal makeprg=\nsetlocal matchpairs=(:),{:},[:]\nsetlocal modeline\nsetlocal modifiable\nsetlocal nrformats=bin,hex\nsetlocal number\nsetlocal numberwidth=4\nsetlocal omnifunc=v:lua.vim.lsp.omnifunc\nsetlocal path=\nsetlocal nopreserveindent\nsetlocal nopreviewwindow\nsetlocal quoteescape=\\\\\nsetlocal noreadonly\nsetlocal norelativenumber\nsetlocal norightleft\nsetlocal rightleftcmd=search\nsetlocal scrollback=-1\nsetlocal noscrollbind\nsetlocal scrolloff=-1\nsetlocal shiftwidth=2\nsetlocal showbreak=\nsetlocal sidescrolloff=-1\nsetlocal signcolumn=number\nsetlocal nosmartindent\nsetlocal nosmoothscroll\nsetlocal softtabstop=2\nsetlocal nospell\nsetlocal spellcapcheck=[.?!]\\\\_[\\\\])'\\\"\\\\t\\ ]\\\\+\nsetlocal spellfile=\nsetlocal spelllang=en\nsetlocal spelloptions=noplainbuffer\nsetlocal statuscolumn=\nsetlocal statusline=%#lualine_a_normal#\\ NORMAL\\ %#lualine_b_normal#\\ \\ main\\ %#lualine_b_filetype_DevIconLua_normal#\\ %#lualine_b_normal#%#lualine_b_normal#%#lualine_b_normal#\\ lualine.lua\\ %<%#lualine_c_normal#%=%#Normal#\\ ●\\ stylua\\ %#lualine_a_normal#%#lualine_a_normal#\\ ●\\ lua_ls\\ \nsetlocal suffixesadd=.lua\nsetlocal swapfile\nsetlocal synmaxcol=3000\nif &syntax != 'ON'\nsetlocal syntax=ON\nendif\nsetlocal tabstop=2\nsetlocal tagcase=\nsetlocal tagfunc=v:lua.vim.lsp.tagfunc\nsetlocal tags=\nsetlocal textwidth=0\nsetlocal thesaurus=\nsetlocal thesaurusfunc=\nsetlocal undofile\nsetlocal undolevels=-123456\nsetlocal varsofttabstop=\nsetlocal vartabstop=\nsetlocal virtualedit=\nsetlocal winbar=\\ %#DevIconLua#%#Normal#\\ %t%m\\ %#GitSignsAdd#1%#Normal#\\ %#GitSignsChange#~1%#Normal#\\ %#Normal#\\ %#DiagnosticSignHint#\\ 1\\ \\ \\ %#Normal#%=%l\/%L\nsetlocal winblend=0\nsetlocal nowinfixheight\nsetlocal nowinfixwidth\nsetlocal winhighlight=\nsetlocal wrap\nsetlocal wrapmargin=0\nsilent! normal! zE\nlet &fdl = &fdl\nlet s:l = 8 - ((7 * winheight(0) + 32) \/ 65)\nif s:l < 1 | let s:l = 1 | endif\nkeepjumps exe s:l\nnormal! zt\nkeepjumps 8\nnormal! 0\ntabnext 1\nset stal=1\nif exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'\n  silent exe 'bwipe ' . s:wipebuf\nendif\nunlet! s:wipebuf\nset winheight=1 winwidth=20\nlet &shortmess = s:shortmess_save\nlet s:sx = expand(\"<sfile>:p:r\").\"x.vim\"\nif filereadable(s:sx)\n  exe \"source \" . fnameescape(s:sx)\nendif\nlet &g:so = s:so_save | let &g:siso = s:siso_save\nset hlsearch\ndoautoall SessionLoadPost\nunlet SessionLoad\n\" vim: set ft=vim :\n"}